assumptions for the code:
The user name and password will be no longer than 10 chars 
list of 'To's will not contain more than 20 users
mail subject will be no longer than 100 chars
mail text will be no longer than 2000 chars

client_side logic:
	*** at any time, user can enter "QUIT" and exit the program
	1. Authentication proccess
		* get from user a string
		* the client_logic is to make sure that the format is correct and only than sends the message to the server
		* the message that the server will see is "<user>    <password>" (4 spaces exactly)
		* incase of bad format, user gets instructions to fix it
	2. Commands to mail server:
		* there is a loop that ends only incase of "QUIT" message from user so that the user can use as much commands as it wants
		* the logic is to get a message from the user and proccess it to a known command
		* if the user message is not in the correct format, helping error message is printed out
		* the commands:
			- SHOW_INBOX: the client side sends the string "SHOW_INBOX" and than print out the data from the server as is
			- GET_MAIL: the client side sends the string "GET_MAIL <id>" and than print out the data from the server as is
			- DELETE_MAIL: the client side sends the string "DELETE_MAIL <id>" and do nothing else
			- COMPOSE: the client side make sure by checks and corrections that the format is as it should be and than sends the strings:
								"COMPOSE\nTo: <user1,user2,..>\nSubject: <subject>\nText: <text>\n"
			- NOTE: the client side can't check if the "TO:" users exists so most of the implementation needs to take place at server side
		
